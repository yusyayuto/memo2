#!/bin/bash
# SecurityHub CLI クイックスタートガイド
# CloudShellで段階的に実行してください

echo "=== SecurityHub CLI エクスポート クイックスタート ==="

# =============================================================================
# STEP 1: 環境確認（まず最初に実行）
# =============================================================================
echo "STEP 1: 環境確認を実行中..."

# SecurityHub有効化状況確認
echo "SecurityHub状況確認:"
aws securityhub describe-hub --output table 2>/dev/null || echo "SecurityHub未有効、または権限不足"

# 現在のリージョン確認
echo "現在のリージョン: $(aws configure get region)"

# 認証情報確認
echo "認証情報: $(aws sts get-caller-identity --query 'Arn' --output text 2>/dev/null || echo '認証エラー')"

echo "STEP 1 完了!"
echo ""

# =============================================================================
# STEP 2: 少量データでテスト（5件のみ取得）
# =============================================================================
echo "STEP 2: 少量テストデータ取得..."

# 5件だけ取得してJSONで確認
echo "5件のFindingsを取得中..."
aws securityhub get-findings --max-items 5 --output json > test_5findings.json

if [ $? -eq 0 ]; then
    echo "✅ 取得成功！"
    echo "件数: $(jq '.Findings | length' test_5findings.json)"
    echo "サンプル項目確認:"
    jq -r '.Findings[0] | keys[]' test_5findings.json | head -10
else
    echo "❌ 取得失敗。権限やSecurityHub設定を確認してください"
    exit 1
fi

echo "STEP 2 完了!"
echo ""

# =============================================================================
# STEP 3: 全件数を把握
# =============================================================================
echo "STEP 3: 全体のデータ量確認..."

# NextTokenの有無で大まかなデータ量を把握
echo "データ量調査中..."
FIRST_BATCH=$(aws securityhub get-findings --max-items 100 --output json)
NEXT_TOKEN=$(echo "$FIRST_BATCH" | jq -r '.NextToken // "NONE"')

if [ "$NEXT_TOKEN" = "NONE" ]; then
    TOTAL_COUNT=$(echo "$FIRST_BATCH" | jq '.Findings | length')
    echo "✅ 全データ: ${TOTAL_COUNT}件（100件未満）"
    echo "→ 一括取得で十分です"
else
    echo "✅ データ量: 100件以上"
    echo "→ ページネーション対応が必要です"
    # 概算のため数回取得してみる
    for i in {2..5}; do
        NEXT_BATCH=$(aws securityhub get-findings --max-items 100 --starting-token "$NEXT_TOKEN" --output json 2>/dev/null)
        if [ $? -eq 0 ]; then
            NEXT_TOKEN=$(echo "$NEXT_BATCH" | jq -r '.NextToken // "NONE"')
            echo "  ${i}00件目まで確認..."
            if [ "$NEXT_TOKEN" = "NONE" ]; then
                echo "  概算: ${i}00件程度"
                break
            fi
        else
            break
        fi
    done
fi

echo "STEP 3 完了!"
echo ""

# =============================================================================
# STEP 4: シンプルCSV出力（100件まで）
# =============================================================================
echo "STEP 4: シンプルCSV出力テスト..."

echo "基本項目のCSVを作成中..."

# シンプルな12列CSVを作成
echo "Id,Title,Severity,ComplianceStatus,WorkflowStatus,CreatedAt,AwsAccountId,Region,ResourceType,GeneratorId,Description" > simple_findings.csv

# 最初の100件を取得してCSV変換
aws securityhub get-findings --max-items 100 --output json | \
jq -r '.Findings[] | [
    .Id,
    .Title,
    .Severity.Label,
    .Compliance.Status,
    .Workflow.Status,
    .CreatedAt,
    .AwsAccountId,
    .Region,
    (.Resources[0].Type // ""),
    .GeneratorId,
    (.Description | gsub("\n"; " ") | gsub(","; ";"))
] | @csv' >> simple_findings.csv

echo "✅ simple_findings.csv 作成完了！"
echo "行数: $(wc -l < simple_findings.csv)"
echo "STEP 4 完了!"
echo ""

# =============================================================================
# STEP 5: 全件取得スクリプト（必要な場合のみ）
# =============================================================================
read -p "全件取得を実行しますか？(y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "STEP 5: 全件取得実行..."
    
    # 全件取得スクリプト
    OUTPUT_FILE="all_findings.json"
    CSV_FILE="all_findings.csv"
    TEMP_FILE="temp_findings.json"
    NEXT_TOKEN=""
    COUNTER=1
    
    echo "全件取得開始: $(date)"
    echo "[]" > $OUTPUT_FILE
    
    while true; do
        echo "  ページ $COUNTER を取得中..."
        
        if [ -z "$NEXT_TOKEN" ]; then
            # 初回実行
            aws securityhub get-findings --max-items 100 --output json > $TEMP_FILE
        else
            # 2回目以降
            aws securityhub get-findings --max-items 100 --starting-token "$NEXT_TOKEN" --output json > $TEMP_FILE
        fi
        
        # エラーチェック
        if [ $? -ne 0 ]; then
            echo "❌ API呼び出しエラー。処理を終了します。"
            break
        fi
        
        # Findingsを結合
        jq -s '.[0] + .[1].Findings' $OUTPUT_FILE $TEMP_FILE > tmp.json && mv tmp.json $OUTPUT_FILE
        
        # NextTokenを取得
        NEXT_TOKEN=$(jq -r '.NextToken // empty' $TEMP_FILE)
        
        if [ -z "$NEXT_TOKEN" ]; then
            echo "✅ 全データ取得完了"
            break
        fi
        
        COUNTER=$((COUNTER + 1))
        echo "    NextToken: ${NEXT_TOKEN:0:20}..."
        
        # API制限対策（1秒待機）
        sleep 1
    done
    
    # 統計情報
    TOTAL_COUNT=$(jq '. | length' $OUTPUT_FILE)
    echo "📊 総取得件数: $TOTAL_COUNT"
    
    # CSV変換
    echo "CSV変換中..."
    echo "Id,Title,Severity,ComplianceStatus,WorkflowStatus,CreatedAt,UpdatedAt,AwsAccountId,Region,ResourceType,ResourceId,GeneratorId,Confidence,Description" > $CSV_FILE
    
    jq -r '.[] | [
        .Id,
        .Title,
        .Severity.Label,
        .Compliance.Status,
        .Workflow.Status,
        .CreatedAt,
        .UpdatedAt,
        .AwsAccountId,
        .Region,
        (.Resources[0].Type // ""),
        (.Resources[0].Id // ""),
        .GeneratorId,
        .Confidence,
        (.Description | gsub("\n"; " ") | gsub(","; ";"))
    ] | @csv' $OUTPUT_FILE >> $CSV_FILE
    
    echo "✅ $CSV_FILE 作成完了！"
    echo "行数: $(wc -l < $CSV_FILE)"
    
    # クリーンアップ
    rm -f $TEMP_FILE
    
    echo "STEP 5 完了!"
else
    echo "STEP 5 スキップ"
fi

echo ""

# =============================================================================
# STEP 6: 結果確認・分析
# =============================================================================
echo "STEP 6: 結果確認..."

# 最新のCSVファイルを特定
if [ -f "all_findings.csv" ]; then
    CSV_TARGET="all_findings.csv"
elif [ -f "simple_findings.csv" ]; then
    CSV_TARGET="simple_findings.csv"
else
    echo "❌ CSVファイルが見つかりません"
    exit 1
fi

echo "📊 [$CSV_TARGET] 分析結果:"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"

# 基本統計
echo "総行数: $(wc -l < $CSV_TARGET)"
echo ""

# 重要度別集計
echo "🚨 重要度別:"
if [ -f "$CSV_TARGET" ]; then
    tail -n +2 $CSV_TARGET | cut -d',' -f3 | sort | uniq -c | while read count level; do
        echo "  $level: $count件"
    done
fi
echo ""

# ステータス別集計
echo "📋 対応状況別:"
if [ -f "$CSV_TARGET" ]; then
    tail -n +2 $CSV_TARGET | cut -d',' -f5 | sort | uniq -c | while read count status; do
        echo "  $status: $count件"
    done
fi
echo ""

# リソース種別トップ5
echo "🔧 リソース種別 TOP5:"
if [ -f "$CSV_TARGET" ]; then
    tail -n +2 $CSV_TARGET | cut -d',' -f9 | sort | uniq -c | sort -nr | head -5 | while read count type; do
        echo "  $type: $count件"
    done
fi

echo ""
echo "✅ 全工程完了！"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "📁 出力ファイル:"
ls -la *.csv *.json 2>/dev/null || echo "  ファイルなし"
echo ""
echo "💡 次のステップ:"
echo "  1. CSVファイルをローカルにダウンロード"
echo "  2. Excel等で開いて分析"
echo "  3. 必要に応じてフィルタリング条件を調整"
echo "  4. 定期実行の自動化を検討"

# =============================================================================
# 補足: 便利なワンライナー集
# =============================================================================
cat << 'EOF'

🔧 便利なコマンド集:

# 高重要度のみ抽出
aws securityhub get-findings --filters '{"SeverityLabel":[{"Value":"HIGH","Comparison":"EQUALS"},{"Value":"CRITICAL","Comparison":"EQUALS"}]}' --output table

# 特定リソース種別のみ
aws securityhub get-findings --filters '{"ResourceType":[{"Value":"AwsEc2Instance","Comparison":"EQUALS"}]}' --output table

# 新規案件のみ
aws securityhub get-findings --filters '{"WorkflowStatus":[{"Value":"NEW","Comparison":"EQUALS"}]}' --output table

# 最近30日の案件
aws securityhub get-findings --filters '{"CreatedAt":[{"DateRange":{"Value":30,"Unit":"DAYS"}}]}' --output table

# CSVをS3にアップロード（共有用）
# aws s3 cp all_findings.csv s3://your-bucket/securityhub-export-$(date +%Y%m%d).csv

EOF
